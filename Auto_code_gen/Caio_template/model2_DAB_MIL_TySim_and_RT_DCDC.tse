version = 4.2

//
// Saved by sw version: 2024.4
//

model "model2_DAB_MIL_TySim_DCDC_SCADA" {
    configuration {
        hil_device = "HIL404"
        hil_configuration_id = 5
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = False
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        excluded_component_from_locking_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        solver_type = "DAE"
        integration_method = "BDF"
        max_sim_step = 1e-5
        simulation_time = 0.03
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 10e-9
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Voltage Measurement" Vout {
            execution_rate = "Ts"
            frequency = "fs/10"
            sig_output = "True"
        }
        [
            position = 8808, 8456
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage Measurement" Vin {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 7752, 8448
            rotation = right
            size = 64, 32
        ]

        component "core/Current Measurement" Iout {
            bw_limit = "True"
            execution_rate = "Ts"
            feed_forward = "true"
            frequency = "f_lpf"
            sig_output = "True"
        }
        [
            position = 8504, 8360
            size = 64, 32
        ]

        component "core/Product" Product1 {
        }
        [
            position = 8064, 8672
            hide_name = True
        ]

        component "core/Probe" Pmeas {
            signal_type = "active power"
        }
        [
            position = 8368, 8672
        ]

        component "core/Gain" deg2rad2 {
            gain = "1e-3"
        }
        [
            position = 8168, 8672
            hide_name = True
        ]

        component "core/Battery" Battery2 {
            Kdisc_I = "20.0"
            Ke_exp = "103.0"
            Ke_full = "116.0"
            Kq_exp = "85.0"
            Kq_nom = "93.5"
            R_series = "0.020000000000000018"
            battery_type = "Lithium-Ion"
            capacity = "500"
            initial_soc = "50"
            nominal_voltage = "400"
        }
        [
            position = 8712, 8456
            rotation = right
            size = 64, 48
        ]

        component "core/Battery" Battery1 {
            Kdisc_I = "20.0"
            Ke_exp = "103.0"
            Ke_full = "116.0"
            Kq_exp = "85.0"
            Kq_nom = "93.5"
            R_series = "0.08000000000000007"
            battery_type = "Lithium-Ion"
            capacity = "250"
            initial_soc = "50"
            nominal_voltage = "800"
        }
        [
            position = 7504, 8456
            rotation = right
            size = 64, 48
        ]

        component "core/Core Marker" "Core Marker1" {
        }
        [
            position = 7752, 8312
            hide_name = True
        ]

        component "core/Core Marker" "Core Marker2" {
        }
        [
            position = 8712, 8320
            hide_name = True
        ]

        component "core/Inductor" Lout {
            inductance = "Lf"
        }
        [
            position = 8616, 8360
        ]

        component "core/Low-Pass Filter" "Low-Pass Filter1" {
            frequency = "fs/200"
        }
        [
            position = 8264, 8672
        ]

        component "core/Dual Active Bridge" "Dual Active Bridge1" {
            L = "L"
            R_series = "R1"
            SB_3 = "9"
            SB_4 = "10"
            carrier_freq = "fs"
            ctrl_src = "Internal modulator"
            d_time = "tdt*0"
            n = "N2/N1"
            ref_sig_min_max = "[0.0, 1.0]"
            signal_access = "Inherit"
        }
        [
            position = 8168, 8456
            size = 528, 253
        ]

        component "core/Capacitor" Cout {
            capacitance = "C"
            signal_access = "Inherit"
        }
        [
            position = 8552, 8456
            rotation = right
        ]

        component "core/Inductor" Lin {
            inductance = "Lf"
            signal_access = "Inherit"
        }
        [
            position = 7576, 8360
        ]

        component "core/Capacitor" Cin {
            capacitance = "C"
            signal_access = "Inherit"
        }
        [
            position = 7664, 8448
            rotation = right
        ]

        component "core/Constant" Constant1 {
            execution_rate = "Ts"
            value = "0.5"
        }
        [
            position = 7956, 8248
            hide_name = True
        ]

        component "core/Constant" Constant2 {
            execution_rate = "Ts"
            value = "0.5"
        }
        [
            position = 8340, 8252
            hide_name = True
            scale = -1, 1
        ]

        component "core/Constant" Constant3 {
            execution_rate = "Ts"
            value = "0"
        }
        [
            position = 7956, 8204
            hide_name = True
        ]

        component "core/Constant" Constant4 {
            execution_rate = "Ts"
        }
        [
            position = 8128, 8304
            hide_name = True
        ]

        component "core/Constant" Constant17 {
            execution_rate = "Ts"
            value = "180"
        }
        [
            position = 8448, 7796
            hide_name = True
        ]

        component "core/Sum" Sum20 {
        }
        [
            position = 8552, 7828
            hide_name = True
        ]

        component "core/Gain" Gain10 {
            gain = "-1"
        }
        [
            position = 8448, 7860
            hide_name = True
        ]

        component "core/Probe" Iref_meas {
        }
        [
            position = 7952, 7684
        ]

        component "core/Sum" Sum19 {
            signs = "+-"
        }
        [
            position = 7904, 7852
            hide_name = True
        ]

        component "core/PID controller" "PID controller3" {
            controller_type = "PI"
            enb_anti_windup_out = "True"
            enb_output_limit_out = "True"
            ki = "Ki"
            kp = "Kp"
            lower_sat_lim = "-np.pi/2"
            show_reset = "either"
            upper_sat_lim = "np.pi/2"
        }
        [
            position = 8056, 7860
            hide_name = True
        ]

        component "core/Gain" rad2deg {
            gain = "180/np.pi"
        }
        [
            position = 8172, 7860
        ]

        component "core/Limit" Limit3 {
            lower_limit = "-90"
            upper_limit = "90"
        }
        [
            position = 8320, 7860
            hide_name = True
        ]

        component "core/Probe" PI_out {
        }
        [
            position = 8320, 7924
        ]

        component "core/Probe" Iout_sample {
            signal_type = "active power"
        }
        [
            position = 7856, 8052
        ]

        component "core/SCADA Input" Iref {
            execution_rate = "Ts"
            max = "200"
            min = "-200"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7668, 7780
        ]

        component "core/Constant" Constant18 {
            execution_rate = "Ts"
        }
        [
            position = 7964, 7904
            hide_name = True
        ]

        component "core/Scope" Scope1 {
            selected_signals = "[\"Dual Active Bridge1.v_ac_A\", \"Dual Active Bridge1.v_ac_B\", \"Dual Active Bridge1.i_L\", \"Iout\"]"
            signals_data = "{\"signals\": {\"Dual Active Bridge1.v_ac_A\": {\"viewports\": [1], \"type\": \"analog\", \"color\": {\"1\": \"#FF0000\"}, \"display\": {\"1\": \"solid\"}}, \"Dual Active Bridge1.v_ac_B\": {\"viewports\": [1], \"type\": \"analog\", \"color\": {\"1\": \"#00CC00\"}, \"display\": {\"1\": \"solid\"}}, \"Dual Active Bridge1.i_L\": {\"viewports\": [2], \"type\": \"analog\", \"color\": {\"2\": \"#FF0000\"}, \"display\": {\"2\": \"solid\"}}, \"Iout\": {\"viewports\": [3], \"type\": \"analog\", \"color\": {\"3\": \"#FF0000\"}, \"display\": {\"3\": \"solid\"}}}, \"viewports\": {\"1\": {\"log_scale_x\": false, \"log_scale_y\": false, \"y_axis_db\": false}, \"2\": {\"log_scale_x\": false, \"log_scale_y\": false, \"y_axis_db\": false}, \"3\": {\"log_scale_x\": false, \"log_scale_y\": false, \"y_axis_db\": false}, \"4\": {\"log_scale_x\": false, \"log_scale_y\": false, \"y_axis_db\": false}}, \"plot_settings\": {\"layout\": \"Vertical\", \"background_color\": \"white\", \"legend_visible\": true}}"
        }
        [
            position = 8684, 8196
        ]

        component "core/Step" Step1 {
            execution_rate = "Ts"
            final_value = "50"
            step_time = "0.005"
        }
        [
            position = 7668, 7652
        ]

        component "core/Step" Step2 {
            execution_rate = "Ts"
            final_value = "-1*50"
            step_time = "0.015"
        }
        [
            position = 7668, 7716
        ]

        component "core/Sum" Sum21 {
            signs = "3"
        }
        [
            position = 7764, 7684
        ]

        tag Goto5 {
            value = "Vout"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8880, 8456
            hide_name = True
            size = 60, 20
        ]

        tag Goto6 {
            value = "Vin"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7840, 8448
            hide_name = True
            size = 60, 20
        ]

        tag From14 {
            value = "Iout"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 7968, 8656
            hide_name = True
            size = 60, 20
        ]

        tag From15 {
            value = "Vout"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7968, 8688
            hide_name = True
            size = 60, 20
        ]

        tag Goto7 {
            value = "Iout"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 8560, 8312
            hide_name = True
            size = 60, 20
        ]

        tag From16 {
            value = "shift2"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 8164, 8204
            hide_name = True
            scale = -1, 1
            size = 60, 20
        ]

        tag From17 {
            value = "shift3"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 8164, 8260
            hide_name = True
            size = 60, 20
        ]

        tag From18 {
            value = "shift4"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 8164, 8232
            hide_name = True
            size = 60, 20
        ]

        tag Goto9 {
            value = "shift3"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 8688, 7908
            hide_name = True
            size = 60, 20
        ]

        tag Goto10 {
            value = "shift4"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 8688, 7828
            hide_name = True
            size = 60, 20
        ]

        tag Goto12 {
            value = "shift2"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 8688, 7796
            hide_name = True
            size = 60, 20
        ]

        tag From19 {
            value = "Iout"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 7724, 7860
            hide_name = True
            size = 60, 20
        ]

        junction Junction80 pe
        [
            position = 8712, 8360
        ]

        junction Junction81 pe
        [
            position = 8712, 8552
        ]

        junction Junction86 pe
        [
            position = 7752, 8360
        ]

        junction Junction93 pe
        [
            position = 8712, 8360
        ]

        junction Junction104 pe
        [
            position = 7752, 8360
        ]

        junction Junction105 pe
        [
            position = 7752, 8552
        ]

        junction Junction106 pe
        [
            position = 8552, 8552
        ]

        junction Junction107 pe
        [
            position = 8552, 8360
        ]

        junction Junction108 pe
        [
            position = 7664, 8360
        ]

        junction Junction109 pe
        [
            position = 7664, 8552
        ]

        junction Junction110 sp
        [
            position = 8040, 8248
        ]

        junction Junction111 sp
        [
            position = 8296, 8252
        ]

        junction Junction162 sp
        [
            position = 8504, 7796
        ]

        junction Junction157 sp
        [
            position = 8256, 7860
        ]

        junction Junction167 sp
        [
            position = 8512, 7860
        ]

        junction Junction174 sp
        [
            position = 7808, 7860
        ]

        junction Junction175 sp
        [
            position = 7840, 7684
        ]

        scheme_area Area2 {
            title = <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Tahoma'; font-size:14pt; font-weight:0; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Controller</p></body></html>
        }
        [
            position = 8212, 7840
            size = 1184, 556
            background_color = #0eff0000
        ]

        connect Goto5 Vout.out as Connection427
        connect Product1.out deg2rad2.in as Connection434
        connect Battery2.p_node Junction80 as Connection567
        connect Battery2.n_node Junction81 as Connection570
        connect From15 Product1.in1 as Connection578
        connect From14 Product1.in as Connection579
        connect Vin.p_node Junction86 as Connection598
        connect "Core Marker2.node" Junction93 as Connection644
        connect Junction93 Junction80 as Connection645
        connect Lout.n_node Junction93 as Connection646
        connect Junction81 Vout.n_node as Connection650
        [
            breakpoints = 8808, 8552; 8808, 8552
        ]
        connect Junction80 Vout.p_node as Connection651
        [
            breakpoints = 8712, 8360; 8808, 8360
        ]
        connect Goto7 Iout.out as Connection671
        connect deg2rad2.out "Low-Pass Filter1.in" as Connection698
        connect "Low-Pass Filter1.out" Pmeas.in as Connection699
        connect Iout.p_node "Dual Active Bridge1.B+" as Connection703
        connect Junction86 Junction104 as Connection707
        connect Junction104 "Core Marker1.node" as Connection708
        [
            breakpoints = 7752, 8360; 7752, 8360; 7752, 8360
        ]
        connect "Dual Active Bridge1.A+" Junction104 as Connection709
        connect Vin.n_node Junction105 as Connection710
        connect Junction105 "Dual Active Bridge1.A-" as Connection712
        connect Junction106 Cout.n_node as Connection7443
        connect Junction106 "Dual Active Bridge1.B-" as Connection7444
        connect Junction106 Junction81 as Connection7445
        connect Junction107 Cout.p_node as Connection7446
        connect Junction107 Iout.n_node as Connection7447
        connect Junction107 Lout.p_node as Connection7448
        connect Vin.out Goto6 as Connection7449
        connect Battery1.p_node Lin.p_node as Connection7450
        connect Lin.n_node Junction108 as Connection7452
        connect Junction108 Junction86 as Connection7453
        connect Cin.p_node Junction108 as Connection7454
        connect Battery1.n_node Junction109 as Connection7459
        connect Junction109 Junction105 as Connection7460
        [
            breakpoints = 7664, 8552; 7672, 8552; 7752, 8552
        ]
        connect Cin.n_node Junction109 as Connection7461
        connect Constant1.out Junction110 as Connection7463
        connect Junction110 "Dual Active Bridge1.In_a2" as Connection7464
        [
            breakpoints = 8056, 8248; 8056, 8320
        ]
        connect "Dual Active Bridge1.In_a1" Junction110 as Connection7465
        [
            breakpoints = 8040, 8320; 8040, 8248
        ]
        connect Constant2.out Junction111 as Connection7467
        connect Junction111 "Dual Active Bridge1.In_b1" as Connection7468
        [
            breakpoints = 8280, 8252; 8280, 8320
        ]
        connect "Dual Active Bridge1.In_b2" Junction111 as Connection7469
        [
            breakpoints = 8296, 8320; 8296, 8252
        ]
        connect Constant3.out "Dual Active Bridge1.Offset_a1" as Connection7470
        connect From16 "Dual Active Bridge1.Offset_a2" as Connection7471
        connect From18 "Dual Active Bridge1.Offset_b2" as Connection7472
        connect From17 "Dual Active Bridge1.Offset_b1" as Connection7473
        connect Constant4.out "Dual Active Bridge1.En" as Connection7474
        connect Constant17.out Junction162 as Connection7475
        connect Sum20.in Junction162 as Connection7476
        connect Sum20.out Goto10 as Connection7477
        connect Goto12 Junction162 as Connection7478
        connect rad2deg.in "PID controller3.out" as Connection1438
        connect "PID controller3.in" Sum19.out as Connection1440
        connect rad2deg.out Junction157 as Connection7426
        connect Junction157 Limit3.in as Connection7427
        connect PI_out.in Junction157 as Connection7428
        connect Goto9 Junction167 as Connection7479
        connect Junction167 Sum20.in1 as Connection7480
        [
            breakpoints = 8512, 7860
        ]
        connect Gain10.out Junction167 as Connection7481
        connect Junction174 Sum19.in1 as Connection7516
        [
            breakpoints = 7808, 7860
        ]
        connect From19 Junction174 as Connection7517
        connect Constant18.out "PID controller3.reset" as Connection7518
        connect Gain10.in Limit3.out as Connection7520
        connect Iout_sample.in Junction174 as Connection7521
        [
            breakpoints = 7808, 8052
        ]
        connect Sum21.in Step1.out as Connection7526
        connect Sum21.in1 Step2.out as Connection7527
        connect Iref.out Sum21.in2 as Connection7529
        [
            breakpoints = 7716, 7780; 7716, 7700
        ]
        connect Sum19.in Junction175 as Connection7530
        [
            breakpoints = 7840, 7828; 7840, 7828; 7840, 7740
        ]
        connect Junction175 Iref_meas.in as Connection7531
        connect Sum21.out Junction175 as Connection7532
    }

    default {
        "core/Capacitor" {
            signal_access = "inherit"
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Constant" {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/Core Marker" {
            marker_id = "id0"
        }

        "core/Gain" {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            _tunable = "False"
            execution_rate = "inherit"
        }

        "core/Inductor" {
            signal_access = "inherit"
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Limit" {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        "core/Low-Pass Filter" {
            frequency = "500"
            init_out = "0"
            unit = "Hz"
            execution_rate = "inherit"
            _tunable = "False"
        }

        "core/PID controller" {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            show_reset = "none"
            upper_sat_lim = "1"
            upper_sat_lim_source = "internal"
            lower_sat_lim = "-1"
            lower_sat_lim_source = "internal"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            _tunable = "False"
            execution_rate = "inherit"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/Product" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Scope" {
            signals_data = "{}"
            selected_signals = "[]"
        }

        "core/Step" {
            step_time = "1"
            initial_value = "0"
            final_value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        "core/Sum" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/Battery" {
            signal_access = "inherit"
            sig_output = "False"
            lut = "False"
            battery_type = "Lead-Acid"
            nominal_voltage = "12.0"
            capacity = "1.2"
            initial_soc = "100.0"
            execution_rate = "100e-6"
            Ke_full = "108.0"
            Kdisc_I = "5.0"
            R_series = "0.25"
            Kq_nom = "50.0"
            Kq_exp = "0.9"
            Ke_exp = "102.5"
            preview = "Preview SOC Curve"
        }

        "core/Current Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Dual Active Bridge" {
            en_series_capacitor = "False"
            L = "1e-6"
            C = "1e-6"
            R_series = "1e-3"
            n = "1"
            ctrl_src = "Digital inputs"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            SA_1 = "1"
            SA_1_logic = "active high"
            SA_2 = "2"
            SA_2_logic = "active high"
            SA_3 = "3"
            SA_3_logic = "active high"
            SA_4 = "4"
            SA_4_logic = "active high"
            SB_1 = "5"
            SB_1_logic = "active high"
            SB_2 = "6"
            SB_2_logic = "active high"
            SB_3 = "7"
            SB_3_logic = "active high"
            SB_4 = "8"
            SB_4_logic = "active high"
            _control_property = "all high"
            pwm_enabling_a = "False"
            pwm_enable_di_a = "9"
            pwm_enable_inv_a = "active high"
            pwm_enabling_b = "False"
            pwm_enable_di_b = "10"
            pwm_enable_inv_b = "active high"
            R_dc_a = "1e-3"
            R_dc_b = "1e-3"
            reserved_parameter = "1"
            signal_access = "inherit"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        
        Tc = 10e-9
        Ts = 50e-6
        Tslow = 1e-3
        
        fdiv = 5
        fs = 500e3/fdiv
        tdt = 0.05e-6
        L = 0.02e-3*fdiv
        
        # DAB Control *****************
        Vin = 800
        Vout = 400
        N2 = 1
        n = Vout/Vin
        N1 = 1/n*N2
        
        Pmax = 50e3   # Power maximum at rated voltage
        Pn = Pmax * 0.8
        L = Vin*Vout/8/n/fs/Pmax
        
        # Output filter design
        f_LC = fs/20
        Imax = Pmax/Vout
        deltaVmax = Vout/20
        C = 1e-4*fdiv
        Lf = 1/(4*f_LC**2*np.pi**2*C)
        
        
        
        Rload = Vout**2/Pn
        
        R1 = L*2*fs*np.pi/25  #0.1
        
        k = Vin*Vout/(2*np.pi**2*n*L*fs)
        
        fi_n = (np.pi-np.sqrt(np.pi**2-4*Pn/k))/2
        fi_n_deg = fi_n/np.pi*180
        
        kg = Vin*Vout/(2*np.pi**2*n*L*fs)*(np.pi-2*fi_n)    # Gain from angle in radians to power
        
        Wg = kg*2/C          # Total gain of open loop TF without regulator
        
        
        # Current regulator calculation
        tr = 20 * Ts
        wc = 2.2/tr
        Ki = wc*Vout/kg
        Kp = Ki/10/wc
        
        f_lpf = fs/50
        ws = 2*np.pi*fs
        w_lpf = 2*np.pi*f_lpf
        
        
        a1 = kg*Kp/Vout
        a0 = kg*Ki/Vout
        num = [a1, a0]
        den = [1/w_lpf, 1, 0]
        
        den_cl = [1/w_lpf, 1 + a1, a0]
        
        tf_ol = sp.signal.TransferFunction(num, den)
        tf_cl = sp.signal.TransferFunction(num, den_cl)
        
        w, mag, phase = sp.signal.bode(tf_cl, w=range(100, 10*int(fs), 200))
        #import matplotlib.pyplot as plt
        #fig, ax = plt.subplots(2)
        #ax[0].semilogx(w/(2*np.pi), mag)    # Bode magnitude plot
        #ax[0].grid(True)
        
        #ax[1].semilogx(w/(2*np.pi), phase)  # Bode phase plot
        #ax[1].grid(True)
        #ax[1].set_xlabel('Hz')
        #ax[0].set_title('Closed-loop Bode plot')
        #plt.show()
    ENDCODE
}
